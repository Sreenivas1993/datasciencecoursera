library(swirl)
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageversion("dplyr")
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(cran:size))
select(cran,-(cran:size))
select(X,-(X:size))
6
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="India")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,r_version<="3.0.2",country=="US|country=="IN")
filter(cran,r_version<="3.0.2",country=="US"|country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500)
filter(cran,size>100500,_os=="linux-gnu")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
qwq
q
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
s
kmk
lklml
kjjjhjhgfdee
ftrt
544161t12i2ub3ee'r'e
er
23
r2
summarize(by_package,mean(size))
?n
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
filter(pack_sum,count>679)
top_counts<-filter(pack_sum,count>679)
top_counts
view(top_counts)
View(top_counts)
arrange(top_counts,count())
arrange(top_counts,count)
arrange(top_counts,desc(count))
top_counts_sorted<-arrange(top_counts,desc(count))
View()
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-filter(pack_sum,,unique>465)
top_unique<-filter(pack_sum,,unique>465)
hjhjh
top_unique<-filter(pack_sum,,unique>465)
bhbhbj
njnjnjnjbjbhbhvtfgm,
mkmkmkmm
,llllmkhygr4e
2e2e
e12e
12
e
top_unique<-filter(pack_sum,,unique>465)
top_unique<-filter(pack_sum,,unique > 465)
top_unique<-filter(pack_sum,unique > 465)
View(top_unique)
top_unique_sorted<-arrange(pack_sum,unique)
top_unique_sorted<-arrange(pack_sum,desc(unique))
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
nmnnmn
,m,m,m,
da
dv
advv
adv
advv
advv
dvv
sdv
sdvvs
dvs
dv
sdv
sdvd
sdvsd
vs
dv
sd
vs
ddv
b b  b b
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012--")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
this_moment<-update(this_moment,hours=7,minute=13,seconds=5)
this_moment<-update(this_moment,hours=10,minute=16,seconds=0)
this_moment<-update(this_moment,hours=10,minutes=16,seconds=0)
this_moment
?now
now(tzone = "America/New_York")
nyc<-now(tzone = "America/New_York")
nyc
nyc+days(2)
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-update(depart,hours=15,minutes=50)
arrive<-depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive,tzone="Asia/Hong_Kong")
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?interval
how_long<-interval(last_time,arrive)
as.period(how_long)
stopwatch()
library(swirl)
swirl()
0
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(pm)
quantile(ppm)
quantile(ppm,probs=0.25)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magneta",lwd=4)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat".main="Number of Counties in Each Region")
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(formula=pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region=="east")
head(east)
class(pollutant)
class(pollutiont)
class(pollution)
hist(east$pm25,col="green")
west<-subset(pollution,region=="west")
hist(subset(pollution,region=="west"))
hist(subset(pollution,region=="west")$pm25,col="green")
ee64
96yiyiohi
7y
y
y
y
y
yy
y
y
yy
yy
y
y
yy
y
y
y
yy
y
y
yyyyyyyyyyyy
hh
h
h
h
h
h
h
h
h
h
hh
yykyylylkll8
plot(x,y)
h
h
h
h
h
h
h
hhhhhhhhhhhhh
ipip
ou''
r
r
r
r
r
plot(pollution$pm25)
with(pollution,plot(latituse,pm25))
with(pollution,plot(latitude,pm25))
?with
with(pollution,plot(latitude,pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude,ppm,col=pollution$region)
plot(pollution$latitude~ppm,col=pollution$region)
plot(ppm~pollution$latitude,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,pollution$region=="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
library(swirl)
swirl()
?Devices
with(faithful,plot(eruptions,waiting))
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income,data = state,layout=c(4,1))
xyplot(Life.Exp~Income|region,data = state,layout=c(4,1))
xyplot(Life.Exp~Income|region,data = state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
library(swirl)
swirl()
swirl()
head(airquality)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone(ppb),col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Ozone~Wind))
with(airquality,plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may<=airquality$Month[airquality$Month==5]
may<-airquality$Month[airquality$Month==5]
may<-subset(airquality,Month==5)
5?points()
?points
points(may)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=2,col="green")
plot("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
plot("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
plot(airquality$Wind,airquality$Ozone,set="n")
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v,median(airquality$Wind),lty=2)
?abline
abline(v=median(airquality$Wind),lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
fesg
g
g
g
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer = TRUE)
setwd("C:/Users/Sreenivas/Desktop/coursera Github/datasciencecoursera/Making and Cleaning Data Assignment")
?write.table
library(plyr)
###1.####
x_train<-read.table("train/X_train.txt")
y_train<-read.table("train/y_train.txt")
subject_train<-read.table("train/subject_train.txt")
x_test<-read.table("test/X_test.txt")
y_test<-read.table("test/y_test.txt")
subject_test<-read.table("test/subject_test.txt")
subject_train<-read.table("train/subject_train.txt")
x_data<-rbind(x_test,x_train)
y_data<-rbind(y_test,y_train)
subject_data<-rbind(subject_test,subject_train)
###2.###
features<-read.table("features.txt")
meanstd<-grep(".*mean.*|.*std.*",features[,2])
x_data<-x_data[,meanstd]
names(x_data)<-features[meanstd,2]
####3.#########
activity<-read.table("activity_labels.txt")
y_data[,1]<-activity[y_data[,1],2]
names(y_data)<-"Activities"
############.4####################
names(subject_data)<-"Subject"
totaldat<-cbind(x_data,y_data,subject_data)
################3.5###################
#####totaldat<-as.data.table(totaldat)###
###avg_data<-totaldat[,lapply(.SD,mean),by=.(Activities,Subject)]###
averages_data <- ddply(totaldat, .(Subject,Activities), function(x) colMeans(x[, 1:66]))
write.table(averages_data,"tidydata.txt",row.names = FALSE,quote = FALSE)
library(plyr)
###1.####
x_train<-read.table("train/X_train.txt")
setwd("C:/Users/Sreenivas/Desktop/coursera Github/datasciencecoursera/Making and Cleaning Data Assignment")
library(plyr)
library(reshape2)
filename <- "getdata_dataset.zip"
## Download and unzip the dataset:
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
download.file(fileURL, filename, method="curl")
}
if (!file.exists("UCI HAR Dataset")) {
unzip(filename)
}
###1.#####
x_train<-read.table("UCI HAR Dataset/train/X_train.txt")
y_train<-read.table("UCI HAR Dataset/train/y_train.txt")
subject_train<-read.table("UCI HAR Dataset/train/subject_train.txt")
x_test<-read.table("UCI HAR Dataset/test/X_test.txt")
y_test<-read.table("UCI HAR Dataset/test/y_test.txt")
subject_test<-read.table("UCI HAR Dataset/test/subject_test.txt")
subject_train<-read.table("UCI HAR Dataset/train/subject_train.txt")
x_data<-rbind(x_test,x_train)
y_data<-rbind(y_test,y_train)
subject_data<-rbind(subject_test,subject_train)
###2.###
features<-read.table("UCI HAR Dataset/features.txt")
meanstd<-grep(".*mean.*|.*std.*",features[,2])
x_data<-x_data[,meanstd]
names(x_data)<-features[meanstd,2]
####3.#########
activity<-read.table("UCI HAR Dataset/activity_labels.txt")
y_data[,1]<-activity[y_data[,1],2]
names(y_data)<-"Activities"
############.4####################
names(subject_data)<-"Subject"
totaldat<-cbind(x_data,y_data,subject_data)
################3.5###################
#####totaldat<-as.data.table(totaldat)###
###avg_data<-totaldat[,lapply(.SD,mean),by=.(Activities,Subject)]###
averages_data <- ddply(totaldat, .(Subject,Activities), function(x) colMeans(x[, 1:66]))
write.table(averages_data,"tidydata.txt",row.names = FALSE,quote = FALSE)
library(plyr)
library(reshape2)
filename <- "getdata_dataset.zip"
## Download and unzip the dataset:
if (!file.exists(filename)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
download.file(fileURL, filename, method="curl")
}
if (!file.exists("UCI HAR Dataset")) {
unzip(filename)
}
###1.#####
x_train<-read.table("UCI HAR Dataset/train/X_train.txt")
y_train<-read.table("UCI HAR Dataset/train/y_train.txt")
subject_train<-read.table("UCI HAR Dataset/train/subject_train.txt")
x_test<-read.table("UCI HAR Dataset/test/X_test.txt")
y_test<-read.table("UCI HAR Dataset/test/y_test.txt")
subject_test<-read.table("UCI HAR Dataset/test/subject_test.txt")
subject_train<-read.table("UCI HAR Dataset/train/subject_train.txt")
x_data<-rbind(x_test,x_train)
y_data<-rbind(y_test,y_train)
subject_data<-rbind(subject_test,subject_train)
###2.###
features<-read.table("UCI HAR Dataset/features.txt")
meanstd<-grep(".*mean.*|.*std.*",features[,2])
x_data<-x_data[,meanstd]
names(x_data)<-features[meanstd,2]
####3.#########
activity<-read.table("UCI HAR Dataset/activity_labels.txt")
y_data[,1]<-activity[y_data[,1],2]
names(y_data)<-"Activities"
############.4####################
names(subject_data)<-"Subject"
totaldat<-cbind(x_data,y_data,subject_data)
################3.5###################
#####totaldat<-as.data.table(totaldat)###
###avg_data<-totaldat[,lapply(.SD,mean),by=.(Activities,Subject)]###
averages_data <- ddply(totaldat, .(Subject,Activities), function(x) colMeans(x[, 1:66]))
write.table(averages_data,"tidydata.txt",row.names = FALSE,quote = FALSE,sep ='\t' )
